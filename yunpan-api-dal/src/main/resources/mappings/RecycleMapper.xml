<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quarkdata.yunpan.api.dal.dao.RecycleMapper">
  <resultMap id="BaseResultMap" type="com.quarkdata.yunpan.api.model.dataobj.Recycle">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="inc_id" jdbcType="BIGINT" property="incId" />
    <result column="document_id" jdbcType="BIGINT" property="documentId" />
    <result column="document_version_id" jdbcType="BIGINT" property="documentVersionId" />
    <result column="document_parent_id" jdbcType="BIGINT" property="documentParentId" />
    <result column="document_id_path" jdbcType="VARCHAR" property="documentIdPath" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_delete" jdbcType="CHAR" property="isDelete" />
    <result column="is_visiable" jdbcType="CHAR" property="isVisiable" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, inc_id, document_id, document_version_id, document_parent_id, document_id_path, 
    create_user, create_time, is_delete, is_visiable
  </sql>
  <select id="selectByExample" parameterType="com.quarkdata.yunpan.api.model.dataobj.RecycleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from recycle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from recycle
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from recycle
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.quarkdata.yunpan.api.model.dataobj.RecycleExample">
    delete from recycle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.quarkdata.yunpan.api.model.dataobj.Recycle">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into recycle (inc_id, document_id, document_version_id, 
      document_parent_id, document_id_path, create_user, 
      create_time, is_delete, is_visiable
      )
    values (#{incId,jdbcType=BIGINT}, #{documentId,jdbcType=BIGINT}, #{documentVersionId,jdbcType=BIGINT}, 
      #{documentParentId,jdbcType=BIGINT}, #{documentIdPath,jdbcType=VARCHAR}, #{createUser,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=CHAR}, #{isVisiable,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.quarkdata.yunpan.api.model.dataobj.Recycle">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into recycle
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="incId != null">
        inc_id,
      </if>
      <if test="documentId != null">
        document_id,
      </if>
      <if test="documentVersionId != null">
        document_version_id,
      </if>
      <if test="documentParentId != null">
        document_parent_id,
      </if>
      <if test="documentIdPath != null">
        document_id_path,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="isVisiable != null">
        is_visiable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="incId != null">
        #{incId,jdbcType=BIGINT},
      </if>
      <if test="documentId != null">
        #{documentId,jdbcType=BIGINT},
      </if>
      <if test="documentVersionId != null">
        #{documentVersionId,jdbcType=BIGINT},
      </if>
      <if test="documentParentId != null">
        #{documentParentId,jdbcType=BIGINT},
      </if>
      <if test="documentIdPath != null">
        #{documentIdPath,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=CHAR},
      </if>
      <if test="isVisiable != null">
        #{isVisiable,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.quarkdata.yunpan.api.model.dataobj.RecycleExample" resultType="java.lang.Long">
    select count(*) from recycle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update recycle
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.incId != null">
        inc_id = #{record.incId,jdbcType=BIGINT},
      </if>
      <if test="record.documentId != null">
        document_id = #{record.documentId,jdbcType=BIGINT},
      </if>
      <if test="record.documentVersionId != null">
        document_version_id = #{record.documentVersionId,jdbcType=BIGINT},
      </if>
      <if test="record.documentParentId != null">
        document_parent_id = #{record.documentParentId,jdbcType=BIGINT},
      </if>
      <if test="record.documentIdPath != null">
        document_id_path = #{record.documentIdPath,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=CHAR},
      </if>
      <if test="record.isVisiable != null">
        is_visiable = #{record.isVisiable,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update recycle
    set id = #{record.id,jdbcType=BIGINT},
      inc_id = #{record.incId,jdbcType=BIGINT},
      document_id = #{record.documentId,jdbcType=BIGINT},
      document_version_id = #{record.documentVersionId,jdbcType=BIGINT},
      document_parent_id = #{record.documentParentId,jdbcType=BIGINT},
      document_id_path = #{record.documentIdPath,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=CHAR},
      is_visiable = #{record.isVisiable,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.quarkdata.yunpan.api.model.dataobj.Recycle">
    update recycle
    <set>
      <if test="incId != null">
        inc_id = #{incId,jdbcType=BIGINT},
      </if>
      <if test="documentId != null">
        document_id = #{documentId,jdbcType=BIGINT},
      </if>
      <if test="documentVersionId != null">
        document_version_id = #{documentVersionId,jdbcType=BIGINT},
      </if>
      <if test="documentParentId != null">
        document_parent_id = #{documentParentId,jdbcType=BIGINT},
      </if>
      <if test="documentIdPath != null">
        document_id_path = #{documentIdPath,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=CHAR},
      </if>
      <if test="isVisiable != null">
        is_visiable = #{isVisiable,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quarkdata.yunpan.api.model.dataobj.Recycle">
    update recycle
    set inc_id = #{incId,jdbcType=BIGINT},
      document_id = #{documentId,jdbcType=BIGINT},
      document_version_id = #{documentVersionId,jdbcType=BIGINT},
      document_parent_id = #{documentParentId,jdbcType=BIGINT},
      document_id_path = #{documentIdPath,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=CHAR},
      is_visiable = #{isVisiable,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectForUpdate" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from recycle
    where id = #{id,jdbcType=BIGINT} for update
  </select>
</mapper>