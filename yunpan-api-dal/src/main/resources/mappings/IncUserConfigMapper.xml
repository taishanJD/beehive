<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quarkdata.yunpan.api.dal.dao.IncUserConfigMapper">
  <resultMap id="BaseResultMap" type="com.quarkdata.yunpan.api.model.dataobj.IncUserConfig">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="inc_id" jdbcType="BIGINT" property="incId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="is_receive_message" jdbcType="CHAR" property="isReceiveMessage" />
    <result column="is_receive_email_message" jdbcType="CHAR" property="isReceiveEmailMessage" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, inc_id, user_id, is_receive_message, is_receive_email_message
  </sql>
  <select id="selectByExample" parameterType="com.quarkdata.yunpan.api.model.dataobj.IncUserConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from inc_user_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inc_user_config
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from inc_user_config
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.quarkdata.yunpan.api.model.dataobj.IncUserConfigExample">
    delete from inc_user_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.quarkdata.yunpan.api.model.dataobj.IncUserConfig">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into inc_user_config (inc_id, user_id, is_receive_message, 
      is_receive_email_message)
    values (#{incId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{isReceiveMessage,jdbcType=CHAR}, 
      #{isReceiveEmailMessage,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.quarkdata.yunpan.api.model.dataobj.IncUserConfig">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into inc_user_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="incId != null">
        inc_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="isReceiveMessage != null">
        is_receive_message,
      </if>
      <if test="isReceiveEmailMessage != null">
        is_receive_email_message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="incId != null">
        #{incId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="isReceiveMessage != null">
        #{isReceiveMessage,jdbcType=CHAR},
      </if>
      <if test="isReceiveEmailMessage != null">
        #{isReceiveEmailMessage,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.quarkdata.yunpan.api.model.dataobj.IncUserConfigExample" resultType="java.lang.Long">
    select count(*) from inc_user_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update inc_user_config
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.incId != null">
        inc_id = #{record.incId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.isReceiveMessage != null">
        is_receive_message = #{record.isReceiveMessage,jdbcType=CHAR},
      </if>
      <if test="record.isReceiveEmailMessage != null">
        is_receive_email_message = #{record.isReceiveEmailMessage,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update inc_user_config
    set id = #{record.id,jdbcType=BIGINT},
      inc_id = #{record.incId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      is_receive_message = #{record.isReceiveMessage,jdbcType=CHAR},
      is_receive_email_message = #{record.isReceiveEmailMessage,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.quarkdata.yunpan.api.model.dataobj.IncUserConfig">
    update inc_user_config
    <set>
      <if test="incId != null">
        inc_id = #{incId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="isReceiveMessage != null">
        is_receive_message = #{isReceiveMessage,jdbcType=CHAR},
      </if>
      <if test="isReceiveEmailMessage != null">
        is_receive_email_message = #{isReceiveEmailMessage,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quarkdata.yunpan.api.model.dataobj.IncUserConfig">
    update inc_user_config
    set inc_id = #{incId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      is_receive_message = #{isReceiveMessage,jdbcType=CHAR},
      is_receive_email_message = #{isReceiveEmailMessage,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectForUpdate" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inc_user_config
    where id = #{id,jdbcType=BIGINT} for update
  </select>
</mapper>