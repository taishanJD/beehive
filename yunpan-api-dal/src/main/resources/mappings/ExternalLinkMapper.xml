<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quarkdata.yunpan.api.dal.dao.ExternalLinkMapper">
  <resultMap id="BaseResultMap" type="com.quarkdata.yunpan.api.model.dataobj.ExternalLink">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="inc_id" jdbcType="BIGINT" property="incId" />
    <result column="document_id" jdbcType="BIGINT" property="documentId" />
    <result column="is_enable_external_link" jdbcType="CHAR" property="isEnableExternalLink" />
    <result column="external_link_type" jdbcType="CHAR" property="externalLinkType" />
    <result column="external_link_code" jdbcType="VARCHAR" property="externalLinkCode" />
    <result column="external_link_expire_time" jdbcType="TIMESTAMP" property="externalLinkExpireTime" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
    <result column="download_count" jdbcType="INTEGER" property="downloadCount" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_username" jdbcType="VARCHAR" property="createUsername" />
    <result column="allow_preview" jdbcType="CHAR" property="allowPreview" />
    <result column="allow_download" jdbcType="CHAR" property="allowDownload" />
    <result column="is_secret" jdbcType="CHAR" property="isSecret" />
    <result column="fetch_code" jdbcType="VARCHAR" property="fetchCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, inc_id, document_id, is_enable_external_link, external_link_type, external_link_code, 
    external_link_expire_time, view_count, download_count, create_user, create_time, 
    update_user, update_time, create_username, allow_preview, allow_download, is_secret, 
    fetch_code
  </sql>
  <select id="selectByExample" parameterType="com.quarkdata.yunpan.api.model.dataobj.ExternalLinkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from external_link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from external_link
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from external_link
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.quarkdata.yunpan.api.model.dataobj.ExternalLinkExample">
    delete from external_link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.quarkdata.yunpan.api.model.dataobj.ExternalLink">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into external_link (inc_id, document_id, is_enable_external_link, 
      external_link_type, external_link_code, external_link_expire_time, 
      view_count, download_count, create_user, 
      create_time, update_user, update_time, 
      create_username, allow_preview, allow_download, 
      is_secret, fetch_code)
    values (#{incId,jdbcType=BIGINT}, #{documentId,jdbcType=BIGINT}, #{isEnableExternalLink,jdbcType=CHAR}, 
      #{externalLinkType,jdbcType=CHAR}, #{externalLinkCode,jdbcType=VARCHAR}, #{externalLinkExpireTime,jdbcType=TIMESTAMP}, 
      #{viewCount,jdbcType=INTEGER}, #{downloadCount,jdbcType=INTEGER}, #{createUser,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUsername,jdbcType=VARCHAR}, #{allowPreview,jdbcType=CHAR}, #{allowDownload,jdbcType=CHAR}, 
      #{isSecret,jdbcType=CHAR}, #{fetchCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.quarkdata.yunpan.api.model.dataobj.ExternalLink">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into external_link
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="incId != null">
        inc_id,
      </if>
      <if test="documentId != null">
        document_id,
      </if>
      <if test="isEnableExternalLink != null">
        is_enable_external_link,
      </if>
      <if test="externalLinkType != null">
        external_link_type,
      </if>
      <if test="externalLinkCode != null">
        external_link_code,
      </if>
      <if test="externalLinkExpireTime != null">
        external_link_expire_time,
      </if>
      <if test="viewCount != null">
        view_count,
      </if>
      <if test="downloadCount != null">
        download_count,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUsername != null">
        create_username,
      </if>
      <if test="allowPreview != null">
        allow_preview,
      </if>
      <if test="allowDownload != null">
        allow_download,
      </if>
      <if test="isSecret != null">
        is_secret,
      </if>
      <if test="fetchCode != null">
        fetch_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="incId != null">
        #{incId,jdbcType=BIGINT},
      </if>
      <if test="documentId != null">
        #{documentId,jdbcType=BIGINT},
      </if>
      <if test="isEnableExternalLink != null">
        #{isEnableExternalLink,jdbcType=CHAR},
      </if>
      <if test="externalLinkType != null">
        #{externalLinkType,jdbcType=CHAR},
      </if>
      <if test="externalLinkCode != null">
        #{externalLinkCode,jdbcType=VARCHAR},
      </if>
      <if test="externalLinkExpireTime != null">
        #{externalLinkExpireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="downloadCount != null">
        #{downloadCount,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUsername != null">
        #{createUsername,jdbcType=VARCHAR},
      </if>
      <if test="allowPreview != null">
        #{allowPreview,jdbcType=CHAR},
      </if>
      <if test="allowDownload != null">
        #{allowDownload,jdbcType=CHAR},
      </if>
      <if test="isSecret != null">
        #{isSecret,jdbcType=CHAR},
      </if>
      <if test="fetchCode != null">
        #{fetchCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.quarkdata.yunpan.api.model.dataobj.ExternalLinkExample" resultType="java.lang.Long">
    select count(*) from external_link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update external_link
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.incId != null">
        inc_id = #{record.incId,jdbcType=BIGINT},
      </if>
      <if test="record.documentId != null">
        document_id = #{record.documentId,jdbcType=BIGINT},
      </if>
      <if test="record.isEnableExternalLink != null">
        is_enable_external_link = #{record.isEnableExternalLink,jdbcType=CHAR},
      </if>
      <if test="record.externalLinkType != null">
        external_link_type = #{record.externalLinkType,jdbcType=CHAR},
      </if>
      <if test="record.externalLinkCode != null">
        external_link_code = #{record.externalLinkCode,jdbcType=VARCHAR},
      </if>
      <if test="record.externalLinkExpireTime != null">
        external_link_expire_time = #{record.externalLinkExpireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.viewCount != null">
        view_count = #{record.viewCount,jdbcType=INTEGER},
      </if>
      <if test="record.downloadCount != null">
        download_count = #{record.downloadCount,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUsername != null">
        create_username = #{record.createUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.allowPreview != null">
        allow_preview = #{record.allowPreview,jdbcType=CHAR},
      </if>
      <if test="record.allowDownload != null">
        allow_download = #{record.allowDownload,jdbcType=CHAR},
      </if>
      <if test="record.isSecret != null">
        is_secret = #{record.isSecret,jdbcType=CHAR},
      </if>
      <if test="record.fetchCode != null">
        fetch_code = #{record.fetchCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update external_link
    set id = #{record.id,jdbcType=BIGINT},
      inc_id = #{record.incId,jdbcType=BIGINT},
      document_id = #{record.documentId,jdbcType=BIGINT},
      is_enable_external_link = #{record.isEnableExternalLink,jdbcType=CHAR},
      external_link_type = #{record.externalLinkType,jdbcType=CHAR},
      external_link_code = #{record.externalLinkCode,jdbcType=VARCHAR},
      external_link_expire_time = #{record.externalLinkExpireTime,jdbcType=TIMESTAMP},
      view_count = #{record.viewCount,jdbcType=INTEGER},
      download_count = #{record.downloadCount,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_username = #{record.createUsername,jdbcType=VARCHAR},
      allow_preview = #{record.allowPreview,jdbcType=CHAR},
      allow_download = #{record.allowDownload,jdbcType=CHAR},
      is_secret = #{record.isSecret,jdbcType=CHAR},
      fetch_code = #{record.fetchCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.quarkdata.yunpan.api.model.dataobj.ExternalLink">
    update external_link
    <set>
      <if test="incId != null">
        inc_id = #{incId,jdbcType=BIGINT},
      </if>
      <if test="documentId != null">
        document_id = #{documentId,jdbcType=BIGINT},
      </if>
      <if test="isEnableExternalLink != null">
        is_enable_external_link = #{isEnableExternalLink,jdbcType=CHAR},
      </if>
      <if test="externalLinkType != null">
        external_link_type = #{externalLinkType,jdbcType=CHAR},
      </if>
      <if test="externalLinkCode != null">
        external_link_code = #{externalLinkCode,jdbcType=VARCHAR},
      </if>
      <if test="externalLinkExpireTime != null">
        external_link_expire_time = #{externalLinkExpireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="viewCount != null">
        view_count = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="downloadCount != null">
        download_count = #{downloadCount,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUsername != null">
        create_username = #{createUsername,jdbcType=VARCHAR},
      </if>
      <if test="allowPreview != null">
        allow_preview = #{allowPreview,jdbcType=CHAR},
      </if>
      <if test="allowDownload != null">
        allow_download = #{allowDownload,jdbcType=CHAR},
      </if>
      <if test="isSecret != null">
        is_secret = #{isSecret,jdbcType=CHAR},
      </if>
      <if test="fetchCode != null">
        fetch_code = #{fetchCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quarkdata.yunpan.api.model.dataobj.ExternalLink">
    update external_link
    set inc_id = #{incId,jdbcType=BIGINT},
      document_id = #{documentId,jdbcType=BIGINT},
      is_enable_external_link = #{isEnableExternalLink,jdbcType=CHAR},
      external_link_type = #{externalLinkType,jdbcType=CHAR},
      external_link_code = #{externalLinkCode,jdbcType=VARCHAR},
      external_link_expire_time = #{externalLinkExpireTime,jdbcType=TIMESTAMP},
      view_count = #{viewCount,jdbcType=INTEGER},
      download_count = #{downloadCount,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_username = #{createUsername,jdbcType=VARCHAR},
      allow_preview = #{allowPreview,jdbcType=CHAR},
      allow_download = #{allowDownload,jdbcType=CHAR},
      is_secret = #{isSecret,jdbcType=CHAR},
      fetch_code = #{fetchCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectForUpdate" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from external_link
    where id = #{id,jdbcType=BIGINT} for update
  </select>
</mapper>