<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quarkdata.yunpan.api.dal.dao.CollectDocumentRelMapper2">
  <resultMap id="BaseResultMap" type="com.quarkdata.yunpan.api.model.dataobj.Document">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="inc_id" jdbcType="BIGINT" property="incId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="document_version_id" jdbcType="BIGINT" property="documentVersionId" />
    <result column="document_name" jdbcType="VARCHAR" property="documentName" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="document_type" jdbcType="VARCHAR" property="documentType" />
    <result column="id_path" jdbcType="VARCHAR" property="idPath" />
    <result column="size" jdbcType="BIGINT" property="size" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_username" jdbcType="VARCHAR" property="createUsername" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_username" jdbcType="VARCHAR" property="updateUsername" />
    <result column="is_delete" jdbcType="CHAR" property="isDelete" />
    <result column="is_share" jdbcType="CHAR" property="isShare" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  
  <resultMap id="BaseResultMapCarryTags" type="com.quarkdata.yunpan.api.model.vo.CollectionVO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="inc_id" jdbcType="BIGINT" property="incId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="doc_id" jdbcType="BIGINT" property="documentId" />
    <result column="document_version_id" jdbcType="BIGINT" property="documentVersionId" />
    <result column="document_name" jdbcType="VARCHAR" property="documentName" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="document_type" jdbcType="VARCHAR" property="documentType" />
    <result column="id_path" jdbcType="VARCHAR" property="idPath" />
    <result column="size" jdbcType="BIGINT" property="size" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_username" jdbcType="VARCHAR" property="createUsername" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_username" jdbcType="VARCHAR" property="updateUsername" />
    <result column="is_delete" jdbcType="CHAR" property="isDelete" />
    <result column="is_share" jdbcType="CHAR" property="isShare" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    
    <collection property="tags" ofType="com.quarkdata.yunpan.api.model.dataobj.Tag">
   		<id property="id" jdbcType="BIGINT" column="t_id" />
		<result property="tagName" column="tag_name" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
		d.id, d.inc_id, d.parent_id, d.document_version_id,
		d.document_name, d.type,
		d.document_type,
		d.id_path,
		d.size, d.create_time, d.create_user, d.update_time, d.update_user,
		d.is_delete,
		d.is_share,
		d.description
  </sql>
  <sql id="Get_Tags">
  		t.id t_id, 
  		t.tag_name
  </sql>
  
    <select id="getDocumentName" parameterType="map" resultType="java.lang.String">
    	select d.document_name from document d where d.id = #{documentId,jdbcType=BIGINT}
    </select>
    
  	<!--<select id="getCollectionList" parameterType="map" resultMap="BaseResultMapCarryTags">
		select
		<include refid="Base_Column_List" />,
		<include refid="Get_Tags" /> ,
		CASE
			WHEN d.document_type = 'dir' THEN
				0
			ELSE
				1
			END AS document_type_order
		from document d 
		left join tag t on t.id in (select tag_id from tag_document_rel tdr where tdr.document_id = d.id) and t.is_delete = '0' and t.create_user = #{userId,jdbcType=BIGINT}
		where d.is_delete = '0' 
		and d.id in 
		(select document_id from collect_document_rel where inc_id =  #{incId,jdbcType=BIGINT} and user_id =  #{userId,jdbcType=BIGINT})
        <if test="documentName != null and  documentName.trim() != ''">
            AND d.document_name like concat('%',#{documentName},'%')
        </if>
        order by document_type_order ASC, d.update_time desc
	</select>-->
  	<select id="getCollectionList" parameterType="map" resultMap="BaseResultMapCarryTags">
		SELECT * FROM (
            SELECT
                x.*, y.*, CASE
            WHEN x.document_type = 'dir' THEN
                0
            ELSE
                1
            END AS document_type_order, x.id AS doc_id
            FROM
                (
                    SELECT
                        d.*, CASE
                    WHEN cdr.document_id = d.id THEN
                        1
                    ELSE
                        0
                    END AS is_direct_collect
                    FROM
                        `collect_document_rel` cdr,
                        document d
                    WHERE
                        cdr.inc_id = #{incId}
                    AND cdr.user_id = #{userId}
                    AND d.id_path LIKE concat('%/', cdr.document_id, '/%')
                    AND d.is_delete = 0
                ) x
            LEFT JOIN (
                SELECT
                    t.tag_name,
                    t.id AS t_id,
                    tdr.document_id
                FROM
                    tag t,
                    tag_document_rel tdr
                WHERE
                    t.id = tdr.tag_id
                AND tdr.inc_id = #{incId}
                AND tdr.create_user = #{userId}
            ) y ON x.id = y.document_id
        ) z
        WHERE
        <choose>
            <when test="parentId == null and documentName == null">
                z.is_direct_collect = 1
            </when>
            <when test="parentId != null and documentName == null">
                z.parent_id = #{parentId}
            </when>
            <when test="parentId != null and documentName != null">
                z.id_path LIKE CONCAT('%/', #{parentId}, '/%')
            </when>
            <otherwise>
                <if test="parentId == null and documentName != null">
                    1 = 1
                </if>
            </otherwise>
        </choose>
        <if test="documentName != null and documentName != ''">
            AND z.document_name LIKE CONCAT('%', #{documentName}, '%')
        </if>
        ORDER BY document_type_order ASC, z.update_time DESC
        <if test="startNum != null and pageSize != null">
            LIMIT #{startNum}, #{pageSize}
        </if>
	</select>

	<select id="getDocumentType" parameterType="map" resultType="java.lang.String">
    	select d.type from document d where d.id = #{documentId,jdbcType=BIGINT}
    </select>
    
    <select id="isShared" parameterType="map" resultType="int">
    	select count(*) from document_share where document_id = #{documentId,jdbcType=BIGINT} and receiver_id = #{receiverId,jdbcType=BIGINT}
    </select>
    
    <select id="getPermissionType" parameterType="map" resultType="java.lang.String">
    	select permission from document_permission where document_id = #{documentId,jdbcType=BIGINT} and receiver_id = #{receiverId,jdbcType=BIGINT}
    </select>
</mapper>
